name: Build and deploy docker image on EC2 instances

on:
  push:
    paths:
      - 'web-app/app.py'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-central-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2


      - name: Build and push docker image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY }}/ping-app:latest .
          docker push ${{ secrets.ECR_REPOSITORY }}/ping-app:latest
        env:
          AWS_REGION: eu-central-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


      - name: Deploy docker image to EC2 instance 1 via SSH
        uses: LuisEnMarroquin/setup-ssh-action@v2.0.0
        with:
          host: ${{ secrets.EC2_HOST_1 }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.ECR_REPOSITORY }}:latest
            docker stop myapp || true
            docker rm myapp || true 
            docker run -d --name myapp -p 8080:8080 ${{ secrets.ECR_REPOSITORY }}:latest

      - name: Deploy docker image to EC2 instance 2 via SSH
        uses: LuisEnMarroquin/setup-ssh-action@v2.0.0
        with:
          host: ${{ secrets.EC2_HOST_2 }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.ECR_REPOSITORY }}:latest
            docker stop myapp || true
            docker rm myapp || true 
            docker run -d --name myapp -p 8080:8080 ${{ secrets.ECR_REPOSITORY }}:latest